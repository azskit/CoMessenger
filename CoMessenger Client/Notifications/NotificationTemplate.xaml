<ResourceDictionary x:Class="COMessengerClient.Notifications.NotificationTemplate"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:COMessengerClient">

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False"    />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">


                        <Path x:Name="path1" RenderOptions.EdgeMode="Aliased" Data="M0,0 L10,10" Height="10"  Stretch="Fill" StrokeThickness="1" Width="10" Stroke="{TemplateBinding Foreground}" />
                        <Path x:Name="path" RenderOptions.EdgeMode="Aliased" Data="M10,0 L0,10" Height="10"  Stretch="Fill" StrokeThickness="1" Width="10" Stroke="{TemplateBinding Foreground}" />


                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#FFA40B0B"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Opacity" TargetName="path" Value="0.3"/>
                            <Setter Property="Opacity" TargetName="path1" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="templ" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Appearing">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                    <EasingThicknessKeyFrame KeyTime="0" Value="10,0,0,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:1" Value="0,0,10,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard BeginTime="00:00:05" x:Key="Disappearing">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:03" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0,0,10,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:1" Value="10,0,0,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <QuarticEase EasingMode="EaseIn"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>

            <DoubleAnimation  x:Key="LiftUp" Storyboard.TargetProperty="(Canvas.Top)" 
                              Duration="00:00:00.090" 
                              From="{TemplateBinding Top}" 
                              To="{TemplateBinding Top, Converter={StaticResource math}, ConverterParameter='-50'}" />


        </ControlTemplate.Resources>
        <Grid x:Name="grid" Margin ="0,0,10,0" Opacity="1" >
            <Border x:Name="border" Opacity ="1" IsVisibleChanged="VisibleChanged" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" Background="{TemplateBinding Background}">
                <AdornerDecorator>
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5">
                    </ContentPresenter>
                </AdornerDecorator>


            </Border>
            <Button Height="15" Width="15"
                                x:Name="button" 
                                VerticalAlignment="Top" 
                                HorizontalAlignment="Right" 
                                Margin="4"
                                Style="{StaticResource CloseButton}" 
                                Click="CloseButtonClick" Foreground="{TemplateBinding Foreground}"  />
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard Storyboard="{StaticResource Appearing}"/>
                <BeginStoryboard x:Name="startDisappearing" Storyboard="{StaticResource Disappearing}" HandoffBehavior="Compose"/>
            </EventTrigger>
            <Trigger Property="Opacity" SourceName="border" Value="0">
                <Setter Property="Visibility" TargetName="border" Value="Hidden"/>
            </Trigger>
            <EventTrigger RoutedEvent="Window.MouseEnter">
                <PauseStoryboard BeginStoryboardName="startDisappearing"/>
                <SeekStoryboard BeginStoryboardName="startDisappearing" Offset="00:00:00"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Window.MouseLeave">
                <ResumeStoryboard BeginStoryboardName="startDisappearing"/>
            </EventTrigger>        </ControlTemplate.Triggers>

        <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">

                    </Border>-->
    </ControlTemplate>








    <Style x:Key="NotificationTemplate" TargetType="{x:Type Window}">
        <Setter Property="Template"   Value="{StaticResource templ}"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <EventSetter Event="Loaded" Handler="OnLoaded"/>
        <Setter Property="WindowStyle"   Value="None"     />
        <Setter Property="ResizeMode"    Value="NoResize" />
        <Setter Property="Topmost"       Value="True"     />
        <Setter Property="ShowInTaskbar" Value="False"    />
        <Setter Property="Focusable" Value="False"    />
        <Setter Property="ShowActivated" Value="False"/>
    </Style>




</ResourceDictionary>