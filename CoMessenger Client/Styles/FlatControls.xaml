<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <Path x:Key="AlignCenterImage" 
          Data="M 2 2.5  L 18 2.5 
                M 6 4.5  L 14 4.5 
                M 6 6.5  L 14 6.5  
                M 6 8.5  L 14 8.5  
                M 6 10.5 L 14 10.5"
          Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Foreground}"
          StrokeThickness="1"          
          SnapsToDevicePixels="True"
          />

    <Path x:Key="AlignLeftImage" 
          Data="M 2 2.5  L 18 2.5 
                M 2 4.5  L 10 4.5 
                M 2 6.5  L 10 6.5  
                M 2 8.5  L 10 8.5  
                M 2 10.5 L 10 10.5"
          Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Foreground}"
          StrokeThickness="1"          
          SnapsToDevicePixels="True"
          />


    <Path x:Key="AlignRightImage" 
          Data="M 2  2.5  L 18 2.5 
                M 10 4.5  L 18 4.5 
                M 10 6.5  L 18 6.5  
                M 10 8.5  L 18 8.5  
                M 10 10.5 L 18 10.5"
          Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Foreground}"
          StrokeThickness="1"          
          SnapsToDevicePixels="True"
         />

    <Geometry  x:Key="EditIcon" >
        M 2 15  L 15 2 
        M 4 17  L 17 4
        M 4 17  L 2 15
        M 17 4  L 15 2
        M 15 6  L 13 4
        M 2 15  L 1 18 
        M 4 17  L 1 18
    </Geometry>

    <Style x:Key="HighlightContentOnHover" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.Style>
                            

                            <Style TargetType="Grid">
                                <Setter Property="Opacity" Value="0.3"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="HighlightBorders" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="DarkBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatButton" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                        <Border BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                BorderThickness="1">
                            <Button BorderBrush="Transparent"
                                    Background="Transparent"
                                    BorderThickness="0.1"
                                    Command="{TemplateBinding Command}"
                                    CommandTarget="{TemplateBinding CommandTarget}"
                                    Focusable="False"
                                    IsTabStop="False">
                            </Button>

                            <Border.Style>
                                <Style TargetType="Border">
                                        <Style.Triggers>
                                            <MultiTrigger>

                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsFocused" Value="False" />
                                                    <Condition Property="IsMouseOver" Value="False" />
                                                </MultiTrigger.Conditions>

                                                <Setter Property="Opacity" Value="0" />

                                            </MultiTrigger>
                                        </Style.Triggers>
                                    </Style>
                            </Border.Style>
                        </Border>

                        <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="3" IsHitTestVisible="False">
                                <ContentPresenter />
                            </Label>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!--ListView без подсветки при наведении и выборе-->
    <Style x:Key="DisableHighlight" TargetType="{x:Type ListViewItem}">

        <Setter Property="Focusable" Value="False"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Flat ComboBox -->

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" 
                                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    
    <!--Region FlatTabControl-->
    <!--Общий фон-->
    <SolidColorBrush x:Key="TabControl_BackgroundBrush_Base" Color="White"/>
    <!--Фон понели позади вкладок-->
    <LinearGradientBrush x:Key="TabItemPanel_BackgroundBrush"
                           StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="Transparent"/>
            <GradientStop Offset="0.99"
               Color="Black"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--<SolidColorBrush x:Key="TabItemPanel_BackgroundBrush" Color="Transparent"/>-->
    <!--Общий цвет границ-->
    <SolidColorBrush x:Key="Common_BorderBrush" Color="#80808080"/>
    

    <!--Region Вкладки-->

    <!--Общий отступ до вкладок от верхней границы-->
    <Thickness x:Key="TabItemPanel_Padding" Top="4"/>
    <!--Высота выбранной вкладки-->
    <Thickness x:Key="TabItemMargin_Selected" Top="-2"/>
    <Thickness x:Key="TabItemMargin_Base" Top="0"/>
    <Thickness x:Key="TabItemMargin_Hover" Top="0"/>

    <!--Обычная вкладка-->
    <SolidColorBrush x:Key="TabItem_TextBrush_Unselected" Color="Black"/>
    <!--<SolidColorBrush x:Key="TabItem_BackgroundBrush_Unselected" Color="White"/>-->
    <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Unselected"
                           StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="White"/>
            <GradientStop Offset="0.99"
               Color="Black"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <!--Неактивная вкладка-->
    <SolidColorBrush x:Key="TabItem_TextBrush_Disabled" Color="Gray"/>
    <!--<SolidColorBrush x:Key="TabItem_BackgroundBrush_Disabled" Color="White"/>-->
    <SolidColorBrush x:Key="TabItem_DisabledBorderBrush" Color="#80808080"/>
    <LinearGradientBrush x:Key="TabItem_BackgroundBrush_Disabled"
                           StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="White"/>
            <GradientStop Offset="0.99"
               Color="Black"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <!--Выбранная вкладка-->
    <SolidColorBrush x:Key="TabItem_BackgroundBrush_Selected" Color="White"/>
    <SolidColorBrush x:Key="TabItem_TextBrush_Selected" Color="Black"/>
    <SolidColorBrush x:Key="TabItem_BorderBrush_Selected" Color="#801E2BB5"/>
    <!--<LinearGradientBrush x:Key="TabItem_BackgroundBrush_Selected"
                           StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="White"/>
            <GradientStop Offset="0.99"
               Color="Black"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>-->
    
    <!--Вкладка при наведении мышки-->
    <SolidColorBrush x:Key="TabItem_TextBrush_Hover" Color="Black"/>
    <SolidColorBrush x:Key="TabItem_HoverBorderBrush" Color="#801E2BB5"/>
    <!--<SolidColorBrush x:Key="TabItem_HoverBackgroundBrush" Color="AliceBlue"/>-->
    <LinearGradientBrush x:Key="TabItem_HoverBackgroundBrush"
                           StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.98" Color="AliceBlue"/>
            <GradientStop Offset="0.99"
               Color="Black"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <!--<SolidColorBrush x:Key="TabPage_InnerBorderBrushDark" Color="Green"/>
    <SolidColorBrush x:Key="TabPage_InnerBorderBrushBright" Color="Red"/>-->


    <!--End Region-->
    
    <!-- The TabControl's Style. -->
    <Style x:Key="FlatTabControl"  TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Background="{StaticResource TabItemPanel_BackgroundBrush}"
                                Padding="{StaticResource TabItemPanel_Padding}"
                                Panel.ZIndex="70"
                                >
                            <!-- This is the area in which TabItems (the strips) will be drawn. -->
                            <TabPanel IsItemsHost="True"/>
                        </Border>

                        <Border BorderThickness="1,0,1,1"
                             Grid.Row="1"
                             BorderBrush="{StaticResource Common_BorderBrush}"
                             Background="{StaticResource TabControl_BackgroundBrush_Base}">

                                    <ContentPresenter ContentSource="SelectedContent" Margin="0"/>

                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The Style for TabItems (strips). -->
    <Style x:Key="FlatTabItems"  TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!-- The Grid helps defining the general height of TabItems. -->
                    <Grid Height="20" VerticalAlignment="Bottom">
                        <!--
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage.
 
                     -->
                        <Border Name="Border"
                             Background="{StaticResource TabItem_BackgroundBrush_Unselected}"
                             BorderBrush="{StaticResource Common_BorderBrush}" 
                             Margin="0,0,0,0"
                             BorderThickness="1,1,1,0"
                             >
                            <!-- This is where the Content of the TabItem will be rendered. -->
                            <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="7,2,7,2"
                                          RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- The appearance of a TabItem when it's inactive/unselected -->
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource Common_BorderBrush}" />
                            <Setter Property="Foreground"
                                Value="{StaticResource TabItem_TextBrush_Unselected}" />
                            <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                            <Setter TargetName="Border" Property="Margin"
                                Value="{StaticResource TabItemMargin_Base}"/>
                        </Trigger>

                        <!--
                        The appearance of a TabItem when it's disabled
                        (in addition to Selected=False)
                     -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItem_DisabledBorderBrush}" />
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource TabItem_BackgroundBrush_Disabled}" />
                            <Setter Property="Foreground"
                                Value="{StaticResource TabItem_TextBrush_Disabled}" />
                        </Trigger>

                        <!-- The appearance of a TabItem when the mouse hovers over it -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="Foreground" Value="{StaticResource TabItem_TextBrush_Hover}" />
                            <Setter Property="BorderBrush"
                                TargetName="Border"
                                Value="{StaticResource TabItem_HoverBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Background" TargetName="Border"
                                Value="{StaticResource TabItem_HoverBackgroundBrush}"/>
                            <!--
                           To further increase the hover-effect, extend the TabItem's height a little
                           more compared to unselected TabItems.
                        -->
                            <Setter TargetName="Border" Property="Margin"
                                Value="{StaticResource TabItemMargin_Hover}"/>
                        </MultiTrigger>

                        <!-- The appearance of a TabItem when it's active/selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <!-- We want the selected TabItem to always be on top. -->
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="{StaticResource TabItem_BorderBrush_Selected}" />
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource TabItem_BackgroundBrush_Selected}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground"
                                Value="{StaticResource TabItem_TextBrush_Selected}"/>
                            <Setter TargetName="Border" Property="Margin"
                                Value="{StaticResource TabItemMargin_Selected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>


                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
        
        
        
    </Style>

    <!--End Region-->

    <!-- End of Flat ComboBox -->

    <!--Полосы прокрутки-->
    
    
    <!--Кнопка "вверх"-->
    <!--<Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="LightBlue" Points="3,15 15,15 9,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Кнопка "вниз"-->
    <!--<Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="LightBlue" Points="3,3 9,15 15,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Пространство между бегунком и кнопками "Пролистнуть страницу"-->
    <Style x:Key="ScrollBarRightPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Width="10"  HorizontalAlignment="Right" Background="Gray"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Opacity" Value="0.1"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Бегунок-->
    <Style x:Key="ScrollBarRightThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <!--<Setter Property="Margin" Value="1,0,1,0" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                        <Rectangle Fill="LightBlue" Margin="0" Width="10" HorizontalAlignment="Right"></Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Opacity" Value="0.5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalRightScrollBar" TargetType="{x:Type ScrollBar}">
        <!--<Grid Width="20" Background="#16FF0000" >-->
            <Grid >
            <Grid.RowDefinitions>
                <!--<RowDefinition MaxHeight="18"/>-->
                <RowDefinition Height="*"/>
                <!--<RowDefinition MaxHeight="18"/>-->
            </Grid.RowDefinitions>
            <!--<RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
            </RepeatButton>-->
            <Track Name="PART_Track" Grid.Row="0" 
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarRightPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarRightThumbStyle}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarRightPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <!--<RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
            </RepeatButton>-->
        </Grid>
    </ControlTemplate>

    <!--Пространство между бегунком и кнопками "Пролистнуть страницу"-->
    <Style x:Key="ScrollBarLeftPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Width="5"  HorizontalAlignment="Left" Background="Gray"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Opacity" Value="0.1"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Бегунок-->
    <Style x:Key="ScrollBarLeftThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <!--<Setter Property="Margin" Value="1,0,1,0" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                        <Rectangle Fill="LightBlue" Margin="0" Width="5" HorizontalAlignment="Left"></Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Opacity" Value="0.5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalLeftScrollBar" TargetType="{x:Type ScrollBar}">
        <!--<Grid Width="20" Background="#16FF0000" >-->
        <Grid >
            <Grid.RowDefinitions>
                <!--<RowDefinition MaxHeight="18"/>-->
                <RowDefinition Height="*"/>
                <!--<RowDefinition MaxHeight="18"/>-->
            </Grid.RowDefinitions>
            <!--<RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
            </RepeatButton>-->
            <Track Name="PART_Track" Grid.Row="0" 
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarLeftPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarLeftThumbStyle}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarLeftPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <!--<RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
            </RepeatButton>-->
        </Grid>
    </ControlTemplate>

    <!--<Style TargetType="{x:Type ScrollBar}"> 
        <Setter Property="Margin" Value="-75,0,0,0"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
    </Style>-->









</ResourceDictionary>